name: Build Artifacts
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
          architecture: x64
          cache: maven
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CODE_ARTIFACT_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CODE_ARTIFACT_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set CodeArtifact token
        run: echo CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain mtnfog --domain-owner ${{ secrets.CODE_ARTIFACT_AWS_ACCOUNT_ID }} --query authorizationToken --output text --region us-east-1 ) >> $GITHUB_ENV
      - name: Generate settings.xml for Maven Builds
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          servers: '[{ "id": "mtnfog-maven-snapshots", "username": "aws", "password": "${{ env.CODEARTIFACT_AUTH_TOKEN }}" }, { "id": "mtnfog-maven-releases", "username": "aws", "password": "${{ env.CODEARTIFACT_AUTH_TOKEN }}" }]'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package deploy
